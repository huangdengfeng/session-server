syntax = "proto3";
package com.seezoon.session;
option go_package = "github.com/seezoon-go-stub/session-server-stub;pb";
option java_package = "com.seezoon.session.stub";
option java_multiple_files = true;
import "validate/validate.proto";

service Session {
  // 创建session
  rpc Create(CreateReq) returns(CreateResp){}
  // 设置属性
  rpc SetAttribute(SetAttributeReq) returns(SetAttributeResp){}
  // 获取属性
  rpc GetAttribute(GetAttributeReq) returns(GetAttributeResp){}
  // 获取全部属性及内容
  rpc Get(GetReq) returns(GetResp){}
  // 获取数据
  rpc GetData(GetDataReq) returns(GetDataResp){}
  // 删除属性
  rpc RemoveAttribute(RemoveAttributeReq) returns(RemoveAttributeResp){}
  // 销毁
  rpc Invalidate(InvalidateReq) returns(InvalidateResp){}
}

message CreateReq {
  // 过期周期，单位秒
  int64 max_inactive_interval = 1 [(validate.rules).int64.gt = 0];
  bytes data = 2 [(validate.rules).bytes.min_len = 1];
  // 属性
  map<string, bytes> attributes = 3;
}

message CreateResp {
  string session_id = 1 ;
}

message SetAttributeReq {
  string session_id = 1 [(validate.rules).string.min_len = 32];
  string key = 2  [(validate.rules).string.min_len = 1];
  bytes value = 3  [(validate.rules).bytes.min_len = 1];
}

message SetAttributeResp {
}

message GetAttributeReq {
  string session_id = 1 [(validate.rules).string.min_len = 32];
  string key = 2  [(validate.rules).string.min_len = 1];
}

message GetAttributeResp {
  // session 过期
  bool session_invalid = 1;
  // 未过期返回
  bytes value = 2 ;
}

message GetReq {
  string session_id = 1 [(validate.rules).string.min_len = 32];
}

message GetResp {
  // session 过期
  bool session_invalid = 1;
  bytes data = 2;
  map<string, bytes> attributes = 3;
}

message GetDataReq {
  string session_id = 1 [(validate.rules).string.min_len = 32];
}

message GetDataResp {
  // session 过期
  bool session_invalid = 1;
  bytes data = 2;
}

message RemoveAttributeReq {
  string session_id = 1 [(validate.rules).string.min_len = 32];
  string key = 2  [(validate.rules).string.min_len = 1];
}

message RemoveAttributeResp {
}

message InvalidateReq {
  string session_id = 1 [(validate.rules).string.min_len = 32];
}

message InvalidateResp {
}

